
RATIONALE AND PHILOSOPHY.
The use of computers is on an historical increase in Nigeria and computers are rapidly becoming parts of our lives. This includes social networking, online shopping, teaching and research, transportation, communication, marketing, to automobiles, manufacturing, patient diagnosis; surgery; treatment and management, the list continues. Nearly all sectors, offices and businesses now use one computer application or the other.  
 
A major challenge in Nigeria, particularly in Lagos state, is the shortage of capable computer professionals who will meet the growing needs of the nation and provide the services and expertise required. In the department of computer science, Lagos State University, we believe that it is possible to train home based computer professionals who will be capable of meeting national needs and also compare favourably with computer professionals in the international community. In view of this, the focus of our undergraduate programme is to equip our students with the right skills and knowledge relevant to the growing needs of this dynamic society. The philosophy of the BSc in Computer Science programme is to produce graduates well equipped with skills, knowledge and ability that will get them prepared for careers in industries, research and public sectors both nationally and internationally.  
 
AIMS
In line with the rationale and philosophy of our Bachelor’s programmes, the aims and objectives of the BSc. Degree programme include:  
1.	To produce graduates with skills and knowledge that will allow them to be comparable with peers in the international community. 
2.	To produce graduates who are capable of applying appropriate scientific principles for solving problems for the promotion of human well-being. 
3.	To produce graduates who are well prepared and ready for self-employment and job creation as an option to seeking employment in the labour market, hence reducing unemployment and boosting our economy. 

OBJECTIVES 
The following are the objectives of the programmes:  
1.	To teach computer science courses that are relevant to the growing needs of this dynamic world. 
2.	To create an environment conducive for learning and research for our students. 
3.	To expose students to the application areas of computer science to enable them acquire transferrable skills and knowledge relevant to both academics and industries. 
4.	To inculcate in our students presentation skills and increase their awareness on the benefits of public engagements. 
                                                                                                                                                              
LEARNING OUTCOMES 
At the end of any of the BSc. Degree programme in computer science, graduates are expected to: 
1.	have comprehensive knowledge of computer science encompassing an understanding of the theoretical foundations and quantitative tools in computer science, as well as the ability to apply the knowledge to solving problems. 
2.	be able to demonstrate problem solving capacity using computational approach in an innovative and creative way. 
3.	display comprehensive knowledge of computer science and should have acquired entrepreneurial skills for self-sufficiency and also to meet the needs of the public and private sectors in Nigeria and beyond. 
 
ADMISSION REQUIREMENTS  
Admission into BSc. Computer programme is in two categories as follows:
i. 	Unified Tertiary Matriculation Examination (UTME) 
Five (5) O/Level credits including English Language, Mathematics, Physics to form the core subjects with credit in any other two relevant science subjects, at the Senior Secondary School Certificate or its equivalent, at a maximum of two sittings.  
ii. Direct Entry
The direct entry admits prospective students into the 200 Level of the Degree Programme with a minimum of two “A” level passes, National Diploma Certificate at a minimum of Upper Credit pass in the relevant subjects.  

DURATION OF STUDY 
a.	Students who entered through the UTME route are required to spend minimum of 4 academic sessions and maximum of 6 academic sessions.  
b.	Students who entered through the direct entry option are required to spend minimum of 3 academic sessions and maximum of 6 academic sessions.  

GRADUATION REQUIREMENTS 
In addition to the general requirements for graduation in the University’s as contained in the brochure, all students who entered through UTME must pass courses totaling a minimum of 144 units while those who entered through direct entry are required to pass courses totaling a minimum of 108 units. 

REGISTRATION OF COURSES 
Students are required to complete registration of courses based on the time and conditions stipulated by the University brochure. 
 
CONTINUOUS ASSESSMENT AND EXAMINATIONS  
a. Continuous Assessment 
Continuous Assessment (CA) shall be done through essays, tests, term papers, tutorial exercises, quizzes and home work. Scores from CA shall be 30% of the final marks. 
 
b. Examination 
Final examination shall be conducted on every course at the end of each semester. Scores from the final examination shall be 70% of the final marks. 
 
 
 
 
 
 	 	 	 
COURSE DESCRIPTION.
 
CSC 104: SOFTWARE WORKSHOP (3 UNITS) - C 
Programming language; Basic elements, Data types, Control structures and Program design; Basic I/O concepts; Arrays; Procedures, Functions and structured programming; Modules; Dynamic Memory Allocation; Programming exercises using current version of FORTRAN language with emphasis on science application problems. 
 
CSC 111: INTRODUCTION TO COMPUTER SCIENCE (3 UNITS) - C  
Meaning and history of Computer Science. Generations of computers. Computer Hardware: functional components, Modern input and output units. Computer Software: Operating Systems, Application Packages. Program Development tools: Flow charts and algorithms. Programs Objects, BASIC or VISUAL BASIC Fundamentals.  
 
CSC 112: PRINCIPLES OF COMPUTER ORGANIZATION (2 UNITS) - C 
Basic concepts of simple machine architecture, major components, functional relationship between the components of the processing UNITS (controls, memory and A.L.U) stored program concepts, representation of instruction in computer memory, addressing, instruction cycle. Computer design: organization, design operation and programming assemblers, program loaders and relocation. Levels of machine design; gates; register and processor levels. CPU design, instruction sets, von Neumann architecture, multiplication and division algorithms and implementation, floating point processors. Parallelism, multiprocessor etc. control unit design, hardwired and micro-programmed control. Memory design, hierarchical memory design, cache, associative and inter leaved memory. 
 
CSC 113: COMPUTER APPLICATION I FOR ARTS, SOCIAL SCIENCES & MANAGEMENT SCIENCES (2 UNITS)  
Meaning and history of Computer Science. Generations of computers. Computer Hardware: functional components, Modern input and output units. Computer Software: Operating Systems, Application Packages. Program Development tools: Flow charts and algorithms. Introduction to using personal computers hardware and software. Using personal computers as effective problem solving tools for the present and the future. Computer application areas and technological trends. 
 
CSC 120: COMPUTER AS A PROBLEM SOLVING TOOL (3 UNITS) - C 
Concept of problem solving. Problem solving steps i.e. Problem identification (e.g. in Management, science and Engineering), Definition of users’ needs/requirement, Identification of solution models, Algorithm design, Coding and Test running, Implementation and documentation. Classes of problems . Effective approach to problem solving using computer programming  toolsi.e. Flowcharts, Algorithm design, Decision Table etc.  The role of algorithm in problem solving process). Formulation of alternative solutions to problems and their computer models. Number systems and their representation. Codes, which detection and correction.  
 
CSC 132: PRINCIPLES OF PROGRAMMING LANGUAGES I (2 UNITS) - C 
Overview of programming languages: History of programming languages, Brief survey of programming paradigms (Procedural languages, Object-oriented languages, Functional languages, Declarative – nonalgorithmic languages, Scripting languages). Study of the features of a common and popular programming language. Introducing to language translation: Comparison of interpreters and compilers etc 
 
CSC 201: COMPUTER APPLICATION II FOR ARTS, SOCIAL SCIENCES & MANAGEMENT SCIENCES (2 UNITS)  
Computer appreciations and experience with common application software.  Word processing: Business documents and publications. Documents and publications used in business. MS Word: Open a new documents, format documents, change fonts size and type, insert page numbers, italicise, boldface, conversion for pdf files, equations, creation of CV, header and footnotes, mail merge, tables, tracking changes, references and bibliography, etc.Spreadsheet -  Excel: Create new spreadsheet, create records related, use formula, macros, format cells, merge cells, split cells, import text files, conversion of spreadsheet files to comma separated files, export as pdf files, charts, and graphs and business applications, etc. Desktop publishing: Business publications (Created using MS Publisher). Use desktop publishing software to create business publications. The internet: Internet Search Tools and Methods & Validate Sites. Tools and methods used for obtaining information from the Internet. Internet search tools and methods.  How to validate, authenticate, and legally use information from the Internet. IE, Mozilla, google. Electronic communication and online safety: Recall components of electronic communication and rules of online safety. Components of electronic communication and rules of online safety.  
CSC 204: INTRODUCTION TO DISCRETE MATHEMATICS (2 UNITS) - C 
Basic Set Theory: Basic definitions, Relations, Equivalence Relations Partition, Ordered Sets. Boolean Algebra & Lattices, Logic, Graph theory: Directed and Undirected graphs, Graph Isomorphism, Basic Graph Theorems, Matrices; Integer and Real matrices, Boolean Matrices, Matrices mod m, Path matrices. Adjacency Vectors/Matrices: Path adjacency matrix, Numerical & Boolean Adjacency matrices. Applications to counting, Discrete Probability Generating Functions, 
 
CSC 205: OPERATING SYSTEM I (3 UNITS) - C 
Introduction: Definition of Operating systems, history of  Operating systems, Operating system structure-monolithic systems, layered systems, virtual machine, client server model processes: The process model, process state transitions, process control block, operation on processes, suspend and resume, Interrupt processing, nucleus, implementation of processes. inter-process communication; Race condition, critical section, mutual exclusion with busy waiting, sleep and wakeup, semaphores, event counters, monitor, message passing, equivalence of primitives, producer-consumer relationship, readers and writers problems, dining philosopher `s problem, sleeping barber problem. Process Scheduling; scheduling objectives, scheduling criteria, preemptive vs. non-preemptive, interval timer or interrupting clock,  deadline, FIFO, Round Robin, priorities, multiple queues, shortest job first, shortest remaining time, highest response ratio nest, fair share, policy versus mechanism, process management; job scheduling versus process scheduling, process scheduling, process scheduling policies, process scheduling algorithms, interrupts, deadlock, starvation  Real Memory Management early system; singleuser contiguous scheme, fixed partition, dynamic partition relocatable dynamic partition, relocatable dynamic partition Virtual Memory Management. Resent system; paged memory allocation. demand. page replacement policies. 
 
CSC 208: INTRODUCTION TO COMPUTER HARDWARE LABORATORY (2 UNITS) - E 
Identify and describe tools used for computer service and explain how to use those tools safely; Identify and describe the various internal components of a computer, assemble a computer system, install an operating system; Describe the purpose of preventive maintenance and basic troubleshooting steps; Troubleshoot using system tools and diagnostic software. Hands-on labs and interactive learning tools which help students to develop critical thinking and complex problem-solving skills; Identify and describe the main components of laptops and portable devices, basic preventive maintenance, and troubleshooting; Identify and describe the differences between printers and scanners, installation and configuration, basic preventive maintenance, and troubleshooting. 
 
CSC 212: COMPUTER ARCHITECTURE (3 UNITS) - C 
Levels of machine design; gates, register and processor levels. Number systems and computer arithmetic, CPU design, instruction sets, von Neumann architecture, multiplication and division algorithms and implementation, floating point processors. Parallelism, multiprocessor etc. control unit design, hardwired and micro-programmed control. Memory design, hierarchical memory design, cache, associative and inter leaved memory. 
 
CSC 213: ALGORITHM DEVELOPMENT AND APPLICATION (3 UNITS) – C   
The study of algorithm design with emphasis on efficient algorithms and effective algorithms designs techniques and complexity, program design, string processing; recursion, NP completeness and approximating algorithms for NP – Complete Problems. Algorithmic Strategies: Fundamental computing algorithms: Numerical algorithms, sequential and binary search algorithms; sorting algorithms, Binary Search tress, Hash tables, graphs & its representation, Greedy techniques, amortized analysis, approximation algorithms, cryptographic algorithms, distributed algorithms.  
 
CSC 214: DATABASE DESIGN AND MANAGEMENT  I   (3 UNITS)  - C                   
Information in the organization, DBMS Technology and concepts, entity relational analysis, the relational data model, structured Query language (SQL), Functional dependency diagrams, Normalization of data, client server database technologies, Data Integrity. What is Data Modeling: Conceptual & physical models, instances, attributes and identifiers, Entity relationship modeling and ERDs, Entity Relationship Diagramming,  Supertypes, Subtypes, and Business Rules, System development life cycle,  Project overview and getting started, Presentation project management, Final presentation components , Presentation. 
CSC 215: SOFTWARE PRACTICE (2 UNITS)  
General introduction to programming. Structured programming elements, Structured Design principles, abstraction, modality, Stepwise refinement, structured design techniques. Teaching of a Structured Programming Language, Laboratory exercises in a Structured Programming Language. Focus on Visual Basic (VB) programming language. Data types. Events. GUI. IDE. Algorithm development, designing, coding, compilation, debugging and documentation. Real life application development. E.g. games, business, science and Engineering. Students should be encouraged to develop and present any application within their interest areas. 
 
CSC 217: FUNDAMENTAL OF DIGITAL ELECTRONICS (2 UNITS) - R  
Voltage and current sources. kirchoff’s laws, linearity and super-position. Therein Norton theorems, steady, state response to sinusoidal excitation; impulse response, semi-conductors, bipolar and field effect transistors; Logic circuit design (gates, multivibrators, etc.) using semi-conductors materials, integrated circuits, classification of IC circuits. 
 
CSC 218: FOUNDATION OF SEQUENTIAL PROGRAM (2 UNITS) - C 
The relationships between H/L languages and the Computer Architecture that underlies their implementation: basic machine architecture, assemblers specification and translation of P/L Block Structured Languages, parameter passing mechanisms.  
 
CSC 219: DIGITAL LOGIC DESIGN (2 UNITS) - E 
Introduction to laboratory and review of lab policies; Hands-on experience on topics that are theoretically covered in the digital logic design course, basic logic gate experiments, combinational logic circuits experiments, and sequential logic circuits experiments. The experiments on all topics vary from functional troubleshooting to gate and block level design implementation. The Laboratory experiments should cover the following topics: IC families, TTL electrical characteristics, DeMorgan’s theorem, Logic circuit simplification, Design of combinational circuit, Introduction to flip-flops, Application of flip-flops, Memory systems and Programmable logic. 
CSC 221: FUNDAMENTALS OF DATA STRUCTURES (3 UNITS) - C 
Elementary data items. Structured data item, array, ordered list, sparse matrices, stacks, queues sequences. Trees, simple sorting and searching techniques. Tree structures and graphs structures; polish notation, storage management and garbage collection. Hash coding, recursive programming, use of macros.  
CSC 222: ASSEMBLY LANGUAGE PROGRAMMING (2 UNITS)  - C 	 	 
Binary number systems and other systems. Types of encoding, modes of representations of data e.g. integer, floating, package decimal, character etc. Basic structure of the computer. Instruction set and corresponding machine language modes of addressing. Instruction execution and flow of macros, linkages, interfacing, assembling a language program with programs in the other languages, necessary aspect of job control languages. 
 
CSC 223: INTRODUCTION TO INFORMATION PROCESSING METHODS (2 UNITS) - C 
Information systems, management information system, other information retrieval. Overview of file organization, data structure, sorting and merging, construction and maintenance of search trees. Decision tables, structure of decision tables. 
 
 
CSC 226: OBJECT-ORIENTED PROGRAMMING I, C++ (3 UNITS) - C  
Introduction to C: Structured Programming elements, structured design principles, abstraction modularity, stepwise refinement, structured design techniques. Teaching of a structured programming language such as C.  Basic object-oriented Programming concepts, objects, inheritance, polymorphism, data abstraction, tools for developing, compiling, interrupting and debugging an object-oriented programming language. Laboratory exercises in an object-oriented programming language. C++ 
 
CSC 228: SOFTWARE PRACTICE II (2 UNITS)  
Programming language; Basic elements, Data types, Control structures and Program design; Basic I/O concepts; Arrays; Procedures, Functions and structured programming; Modules; Dynamic Memory Allocation; Programming exercises using current version of FORTRAN language with emphasis on science application problems. 
 
 
CSC 301: COMPUTER APPLICATION III FOR ARTS, SOCIAL SCIENCES & MANAGEMENT SCIENCES (2 UNITS)  
Databases: Understand database tables, queries, forms, and reports and business applications. 
Implementation using Access db. Students should be encourage to create database using access. Powerpoint presentations: Multimedia presentation software. Apply procedures to use presentation software in business. Business uses of  Presentation software and methods of distribution. Apply procedures to develop multimedia presentations used in business.  Internet banking and Online transactions component of Internet banking. Password Management. Computerization and cashless economy.  Computer virus: Computer Virus, Types of virus, Different Antivirus, Different types of attack malware, spyware, Firewall, updates etc .

CSC 303: OBJECT-ORIENTED PROGRAMMING II, Java (3 UNITS) - C 
The focus of the course is on Java. Basic OOP Concepts: Classes, Objects, inheritance, polymorphism, Data Abstraction, Tools for developing, Compiling, interpreting and debugging, Java Programs, Java Syntax and data objects, operators. Central flow constructs, objects and classes programming, Arrays, methods. Exceptions, Applets and the Abstract, OLE, Persistence, Window or Unix Toolkit, Laboratory exercises in an OOP Language.  
 
CSC 319: COMPILER CONSTRUCTION (3 UNITS) - C 
Review of compilers assemblers and interpreters, structure and functional aspects of a typical compiler, syntax semantics and pragatics, functional relationship between lexical analysis, expression analysis and code generation. Internal form of course programme. Use of a standard compiler (FORTRAN). Grammars and languages, recognizers, Top-down and bottom-up language Run-time storage Organization, The use of display in run-time storage Organization. The use of display in run time storage allocation. LR grammars and analysers. Construction of LR table. Organisation of symbol tablets. Allocation of storage to run-time variables. Code generation. Optimisation/Translator with systems. 
 
CSC 323: EVOLUTIONARY COMPUTATION (2 UNITS)  - E 
Introduction to Evolutionary Computation. Genetic Representation, search operators, selection schemes and selection pressure. Fitness Landscapes e.g. Configuration spaces, Properties of landscapes. Local optima; Basins. Multi-population methods. Co-evolution. Niching and Speciation. Multi-objective Evolutionary Optimisation. Dynamic optimisation Genetic Programming. A case study of Evolutionary methods. Evolving learning-machines, e.g. Neural Networks or Learning Classifier Systems. 
 
CSC 325: OPERATING SYSTEM II (3 UNITS) - C 
File System: Naming, Structure, Types, Access, Attributes, Operating Memory-mapped. Directories: Hierarchical part names, operations, implementation, shared files, disk space management, file system reliability, file system performance. File security: environment, security flaws, internet worms, security attacks, design principles in security, user authentication. Protection mechanisms: protection domain, Access control lists, capabilities, protection model, covert channels. Input /output : I/O devices, Device controllers, Direct Memory  Access, Goals of I/O software, Interrupt handlers, Device drivers, Device Independent I/O software, User-Space I/O software, Disks Hardware, Disk arm scheduling algorithms, error handling, Track-at-a-Time caching, Ram disks, clocks: Clock Hardware, clock software. Terminal: Hardware, Memory-Mapped Terminals, Input software, output software. Case study: UNIX, OS/2, MSDOS and Open systems. A study of concurrency and writing concurrent programs, emphasis will be on language constructs used to express and control concurrency. Concurrent programming techniques an styles. Co-writers, mutual exclusion, semaphones, deadlock, high level concurrency, writer process communication and process structuring, laboratory exercises using a basic concurrent programs. 
 
CSC 327: DATABASE MANAGEMENT SYSTEM II (3 UNITS) - C 
Rational Databases: Mapping conceptual schema to relational Schema; Database Query  Languages (SQL) Concept of Functional dependencies & Multi Valued dependencies. Transaction processing; Distributed databases. Third normal form, Arcs, Hierarchies, and Historical Data, ERD Project Presentation, Drawing Conventions and Generic Modeling, Transforming from Conceptual Model to Physical Model. 
 
CSC 333: COMPUTER RESEARCH METHODOLOGY (1 Unit) - R 
The meaning and concept of research. Types of research: Quantitative and qualitative. The Information skills: retrieving and recording bibliographic information from manual and computerized sources. 
Citation.  Intellectual property rights; time management; report writing; oral presentation, plagiarism. Scientific writing. 
 
CSC 335: INTRODUCTION TO FORMAL LANGUAGES AND AUTOMATA THEORY (2 UNITS) - E 
Formal Language: formal grammars, parsing, regular languages, context-free languages, automata theory. Finite state automata push-down automata. Compiler Construction: Grammars and language, recognizers, top-down and bottom-up production language; run-time. Storage organization. The use of display in run time storage allocation. LR grammars and analyzers of symbol tables. Allocation of storage to run time variable codes generation. Optimization translator writing systems. 
 
CSC 339: SYSTEMS ANALYSIS AND DESIGN (3 UNITS) - C 
System Concept; System Development Life Cycle Analysis: Fact gathering Techniques, data flow diagrams, Process description data modeling. System Design: Structure Charts, form designs, security, automated Tools for design. Scope of systems analysis. System investigation. Input design output design. Review of design and organization of files. Design and documentation. Program designs, feasibility study. Systems analysis techniques, management information system, systems implementation and conversion. 
 
CSC 371: FUNCTIONAL PROGRAMMING: (2 Units) - E  
The study of functional programming paradigm, procedural versus functional paradigm; efficient function handling, structured memory. Heap. Introduction to Haskell: Data types, operators, Lists, List operations, claases types, ZF-exoression, quicksort, function composition, memoisation, fold functions, tuples, zip and curry, mathematical induction . Introduction to Hugs. Basic commands, Loading data, input/output.  
 
CSC 392: PRACTICAL APPLICATION OF SOFTWARE DEVELOPMENT IN INDUSTRIES  (4 UNITS) - R  
The main aim of this course is to give students the opportunity to develop a software package of choice. Students are required to use the software principles learnt so far to develop at least one software package related to the industry where they are undergoing SIWES. The software should reflect the understanding of System Development Life Cycle. Any programming language could be used, e.g. java, C++, etc. Students should also demonstrate ability to create and interrogate databases and their components. Each student is required to submit a CD/DVD containing the source code and the binary or compiled version of the software package at the end of SIWES to the department for assessment. The CD should also contain the documentation on how to use the software, system requirements and installation instruction. 
CSC 394: PRACTICAL APPLICATION OF DATABASE MANAGEMENT IN INDUSTRIES  (4 UNITS) - 
R 
Record keeping is very important in business management and every company or business keeps record and accesses such records at one point or the order. A major challenge in record management is the manual approach of record keeping which is commonly used in Nigeria. Computer Scientists attempt to solve this problem by automating record keeping using database management system concepts. The aim of this course is to encourage each student to apply the concepts of database management learnt in the class to the company where SIWES is undertaken. Students are required to create databases using any package of choice, e.g. MySQL, postgreSQL, Microsoft SQL, MS-Access, Oracle, Sybase, Ingress, Informix, etc. They are also required to demonstrate ability to manipulate tables, issue queries, generate/design reports and forms, link tables, etc. Students could also demonstrate front-end programming ability by using programming languages like PHP, VB.NET, Java, etc in managing the database created. Each student is required to submit a CD containing the package developed at the end of SIWES to the department for assessment. The CD should also contain the documentation on how to use the software, system requirements and installation instruction.  
CSC 396: PRACTICAL APPLICATION OF DATA AND INFORMATION PRESENTATION SKILLS  (4 UNITS) - R  
The most commonly used computer applications in offices are office packages and this is not covered by the university curriculum, though with the understanding that students could acquire the skills during their training. Unfortunately, this never happens and many BSc. Computer Science students leave the university without any knowledge of office applications. The aim of this course is to expose students to office applications, e.g. MS word Excel and powerpoint. Students are required to demonstrate ability to use MS word, Excel and powerpoint or equivalent open office applications. MS Word: Open a new documents, format documents, change fonts size and type, insert page numbers, italicise, boldface, conversion for pdf files, equations, creation of CV, header and footnotes, mail merge, tables, tracking changes, references and bibliography, etc. Excel: Create new spreadsheet, create records related, use formula, macros, format cells, merge cells, split cells, import text files, conversion of spreadsheet files to comma separated files, export as pdf files, etc. Powerpoint: Create slides and presentations, use different designs, and layouts, slide show, slide timing tool, printing, animations,  inserting tables, figures, clip arts, slides rehearsing and recording, Document Workflow, Electronic Document Management System ,Other Office Applications: Payroll, Pension Manager, Human Resources, Customer Relation Management (CRM), etc. Each student is required to submit an electronic copy in CD form of any document created using office tools listed above.  
CSC 398: STUDENTS’ INDUSTRIAL WORK EXPERIENCE SCHEME (SIWES) (6 UNITS) - C 
The SIWES is a work based training programme for a period of six months, in the industry, under the follow up of an academic faculty member from the department of Computer Sciences, Lagos state university. SIWES gives students the opportunity to apply the knowledge acquired during the BSc. Programme to the industry and also to identify problems that could be solved using computational techniques. Students must get a formal/written approval from the head of department before proceeding on the training. Periodic reports and a final report must be submitted for evaluation, an oral examination is required. The first report shall be due for submission at the end of the first three weeks of SIWES. The first report which must be sent electronically to the head of department will contain the activities of the industry, how the industry uses Computer Science / information technology, and the roles assigned to the student. The final report shall contain a summative report of the roles of the students within the industry, what was learnt, challenges and recommendations. This course cannot be taken by students not studying for the award of BSc. in Computer Sciences. 

CSC 405: SOCIAL ISSUES IN INFORMATION TECHNOLOGY (2 UNITS) - E 
Ethical issues in the work place, in work-teams and with clients moral values  generation, culture, heritage and technology im0plications of technology, globally and in Nigeria. Computer abuse, crime detection, legal issues in the IT profession community, global and environmental responsibility professional ethical codes and personal responsibility. 
 
CSC 413: SOFTWARE ENGINEERING (4 UNITS) - C 
Introduction, Software process, Project planning, Requirement Engineering, System Models: Process Models; DFDS, State-transition, State charts UML, Data Models, ER Models, Object oriented modeling using UML, Software verification and validation, Software Testing. Topics from process improvement; Software re-engineering configuration management; formal specification, software cost- estimation, software Architecture, software patterns, software reuse and open source development. 
 
CSC 418 PATTERN RECOGNITION AND COMPUTER VISION (3 UNITS) - E 
Image understanding and analysis, study of the underlying image segmentation techniques, object measurements including shape and texture analysis, feature selection and extraction, classification, multispectral image analysis, 3D imaging, computerized tomography, stereometry and stereoscopic imaging. Image Arithmetic and manipulation. Image format types. MATLAB and image analysis toolbox. 
 
CSC 419: STATISTICAL COMPUTING (3 UNITS) - E 
Problems Associated with analysis of stochastic problems and statistical analysis by Applied Linear Models: Computational aspects of multiple models; Programming for Statistical Problems and Statistical Packages. 
 
CSC 420: INTRODUCTION TO COMPUTER SECURITY (3 UNITS) -C 	 
Private and public-key cryptography; block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security.  Basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits. 
 
CSC 421: EMBEDDED COMPUTER SYSTEMS (2 UNITS) - E 
Introduction to embedded Computing; embedded computing hardware: Processors, DSPs, SOCs, Peripherals; Communications; Software: Real-Time O/Ss, Scheduling; Design Methodology; Hardware Programming; FP GA Programming. Embedded computer systems are found everywhere -- cellular phones, cars, VCRs, cameras, and all kinds of consumer electronics. The huge numbers and new added complexity requires new technologies and design approaches. The goal of this course is to develop a comprehensive understanding of the technologies behind the embedded systems. The students develop an appreciation of the underlying technology capabilities and limitations of the hardware, software components for building embedded systems. The students also learn new approaches for building embedded systems and will gain experience on actual system design through several hands-on experiments. 
 
CSC 424: EXPERT SYSTEMS AND KNOWLEDGE ENGINEERING (2 UNITS) - E 	 
Introduction: The history of knowledge-based expert systems; Characteristics of current expert systems; and Basic concepts for building expert systems. Building and Expert System: The architecture of expert systems; Constructing an expert system; and Tools for building expert systems. Evaluating an Expert System: Reasoning about reasoning; and Issues and case studies. Language and Tools for Knowledge Engineering. A Case Study in Knowledge Engineering  
 
CSC 426: FURTHER STATISTICAL PROCESSING (3 UNITS) - E 
Topics to include: Multiple Regression Analysis; One-way Analysis Variance. Two-way Analysis of Variance; Generalized inverses and Applications; Statistical Control; use of Packages to solve Statistical problems.  
CSC 427: COMPUTATIONAL SCIENCE AND NUMERICAL ANALYSIS (3 UNITS) - C       
Numerical Data representation on computer, Computer as a crunching tool, Floating Point number, representation and arithmetic: Error, Stability, Convergence. Theory of computational solution to problem: numerical algorithm formulation and design, numeric software systems. Introduction to use of Matlab and Maple in numerical computation and engineering applications. Emphasis is on the use of software to solve real problems. Iterative solution of non-linear systems (Newton’s method)   Numerical solution of linear systems. Numerical computation of Eigenvalues eigenvectors. Curve fitting; Function approximation. Numerical differentiation and integration (Simpson’s rule, etc). Explicit and Implicit methods. Differential equations (Euler’s Method, etc). Linear Algebra: Finite Differences.  High performance computation  
 
CSC 428: COMPUTER GRAPHICS AND VISUAL COMPUTING (2 UNITS) - E 
Hardware aspect: Plotters microfilm, display, graphic tables, light pens, other graphical input aids, facsimile and its problems. Refresh/display, refresh buggers, charging images light-pen interaction. Two and three dimensional transformations, perspective, chipping algorithms. Amode’s method, shading, data reduction for graphical input, introduction of character recognition. Curve synthesis and fitting. Controlling, wing, structures, versus doubly linked bits hierarchical data structures, organization for interactive graphics.  
 
CSC 429: MODELING AND SIMULATION (3 UNITS) - E  	 	 	 
The concepts and techniques used in modeling and simulation methodology and a suitable simulation language (SIMPSCRIPT, etc.), inventory control product scheduling, quality control, industrial simulation and forecast, modeling generation of random variables. 
 
CSC 431: ANALYSIS AND DESIGN OF DIGITAL SYSTEM (3 UNITS) - E  
Information; representation and manipulation, coding logic functions, Boolean algebra, logic gates combination circuits design, logarithmic methods of synthesis and minimization of combination circuits design, logarithmic methods of synthesis and minimization of combination circuits memories including latch, flip-flop, shift heartier, RAM and ROM synthesis of synchronous sequential networks. Asynchronous sequential logic. 
 
CSC 432: PRINCIPLES OF PROGRAMMING LANGUAGES II (3 UNITS) - C 
The effects of scale on programming methodology; Language Description: Syntactic Structure (Expression notations, abstract Syntax Tree, Lexical Syntax, Grammars for Expressions, Variants of Grammars), Language Semantics (Informal semantics, Overview of formal semantics, Denotation semantics, Axiomatic semantics, Operational semantics); Declarations and types: The concept of types, Declaration models (binding, visibility, scope, and lifetime), Overview of type-checking, Garbage collection; Abstraction mechanisms: Procedures, function, and iterations as abstraction mechanisms, Parameterization mechanisms (reference vs. value), Activation records and storage management, Type parameters and parameterized types, Modules in programming languages; Object oriented language paradigm; Functional and logic language paradigms.  
 
CSC 433: OPTIMIZATION THEORY (3 UNITS) - E 
Queuing theory, simulation models, inventory models, forecasting, non-linear programming goal programming, calculus of variation, integer programming, quadratic programming, decision theory. 
 
CSC 437: ARTIFICIAL INTELLIGENCE (3 UNITS) - C 	 	 	 	 
Introduction to Artificial Intelligence, understanding natural languages, knowledge representation, export system pattern recognition, the language HLSP and PROLOG. Intelligent agents ; Problem solving as search : Search strategies : Breath first, Depth-first, uniform cost, dept constraint satisfaction Problems, Backtracking search for CSP, Constraint Propagation, Local search for CSPs. Logic-based knowledge representation. 
 
CSC 438 COMPUTER NETWORK AND DATA COMMUNICATION (3 UNITS) - E 
Introduction to concepts, principles and practice of computer communication networks with examples from existing architectures, protocols, and standards. Layering and the OSL model, switching, local, metropolitan, and wide area networks, data grams and virtual circuits, mounting and congestion control, internet working. Introduction, wares, Fourier analysis, measure of communication, channel characteristics, transmission media, noise and distortion, modulation and demodulation, multiplexing, TDM FDM and FCM Parallel and serial transmission (synchronous Vs asynchronous). Bus structures and loop systems, computer network Examples and design consideration, data switching principles broadcast techniques, network structure for packet switching, protocols, description of network e.g. ARPANET, etc. 
 
CSC 439: STATISTICAL PROCESSING SYSTEMS (3 UNITS) - E 
Design and Analysis of Sampling Surveys; Statistical Data Compression; 2D, 3D Frequency Table, Points and Interval Estimation; Test of Significance: Test of Hypothesis; Analysis of Categorical Data; Model Validation; x2-Test, Probability Plots. 
CSC 441: PROJECT MANAGEMENT (3 UNITS)  
 
Management Concepts. Project organization, teams, methods and tools for project management. Organization constraints on development. Project Planning Objectives, Resources, Project Estimation, 
Cost Factors, Decomposition Techniques, Estimation Models. Risk Strategies, Risk Identification, Risk Projection, Risk Monitoring and Management. Work Breakdown Structure,Task Allocation/Effort Distribution. Network Diagrams, PERT and Critical PathMethod, Gantt Chart. Scheduling Strategies. Project Tracking, Controlling Progress. Quality measurement. Linear Programming and PERT/CPM applications. System Engineering, Software Development Process, Software Life Cycle, Software Metrics and Measurement. 
 
CSC 451: HUMAN COMPUTER INTERFACE (HCI) (2 UNITS) - C 
Foundations of HCI, Principles of GUI, GUI toolkits; Human-centred software evaluation and development; GUI design and programming.  
 
CSC 442: INTRODUCTION TO PHP AND MYSQL (2 UNITS) - E 
Meaning of a Web Database Application. The database, the application: Moving data in and out of the database, MYSQL, Communicating with the MYSQL – How MYSQL –works, Advantages of PHP, How PHP works, MYSQL- and PHP, the Perfect Pair, Advantages of the relationship, How MYSQL – and PHP work together, keeping Up with PHP and MYSQL Changes. 
 
CSC 444: MANAGEMENT INFORMATION SYSTEM 
An introduction to Information Systems and their strategic role in business. Types of Information Systems, organizational requirements, systems development strategies, Decision Support Systems, data and information management, and information systems management, control and implementation. 
 
CSC 452: ROBOTICS: (2 UNITS) - E 
Mathematical modeling of robot mechanisms and the analysis methods used to design control laws for these mechanisms. Homogeneous transformations and relative coordinate frames. Topics include: kinematics of robot manipulators, Robot velocities and static forces, manipulator dynamics, reference trajectory generation, control theory applied to robot manipulators, and tele-operation control 
 
CSC 454: DIGITAL IMAGE PROCESSING (2 UNITS) - E 
Digitization and coding of images, characterization and representation of digital images in spatial and frequency domains, image restoration, perception and enhancement, point-, algebraic-, and geometric operations, discrete image transforms, image filtering, image reconstruction, pattern recognition principles: segmentation and object measurement.  
 
CSC 455: NET-CENTRIC COMPUTING (3 UNITS) - E 
Distributed Computing, Mobile & Wireless computing, Network Security; Client/Server Computing. 
Introduction to the WWW, HTML- document structure Images, links, maps, tables, frames, forms, Protocols & server technology- HTTP, TCP/IP, MIME, URLs, CGI JavaScript- syntax, DOM, forms processing, common tasks style sheets- fundamentals, CSS positioning, web design and usability, Introduction to XML - syntax, DTDs XSL, XHTML, Multimedia, audio, video animation, multimedia server  and protocol technology, Web development tools-Editors, site management tools.  
 
CSC 497: SEMINAR ON SPECIAL TOPICS IN COMPUTER SCIENCE (2 UNITS) - C 
Students are required to choose topics on special topics in computer science under the guidance of a supervisor. Students are required to submit the bond form of the seminar to the department upon completion. Topics could include, but not limited to,  any of the following: Performance Evaluation of Computer Systems, Concurrent Programming, Pattern Recognition, Distributed Database, Programming 
Environments, High-Level Language and Data flow Architectures, Computer Vision, Planning, Natural and Spoken Language Understanding, Temporal Logics, Supercomputing VLSI Design, Human Computer Interaction and so on.    
 
CSC 498: FINAL YEAR PROJECT (4 UNITS) - C  
This is an independent project where students are required to carry out a research. A project topic to be chosen by each student under the guidance of the supervisor. Students are required to submit the bond form of the project to the department upon completion.  
 
 
